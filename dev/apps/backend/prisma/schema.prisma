// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  name    String?
  isAdmin Boolean @default(false)
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  image       String
  description String
  sortOrder   Int
  products    Product[] @relation("CategoryProducts")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String
  sortOrder   Int
  categoryId  Int
  category    Category    @relation("CategoryProducts", fields: [categoryId], references: [id])
  OrderItem   OrderItem[]
}

model Order {
  id          Int         @id @default(autoincrement())
  status      String
  subTotal    Float
  serviceFee  Float
  hstTax      Float
  paymentType String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[] 
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id])
  orderId   Int
  productId Int
  price     Float
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
